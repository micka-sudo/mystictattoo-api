const express = require('express');
const cors = require('cors');
const path = require('path');
const fs = require('fs');
const mongoose = require('mongoose');
require('dotenv').config();

// üß≠ Routes
const routes = require('./routes');
const sitemapRoute = require('./routes/sitemap');
const robotsRoute = require('./routes/robots');

// üßæ Configuration admin pour la page d'accueil
const adminConfigPath = path.join(__dirname, 'config', 'admin.json');

// üìÅ Chemins
const uploadsPath = path.join(__dirname, 'uploads');
const frontendPath = path.join(__dirname, 'client', 'build');

const app = express();
const PORT = process.env.PORT || 4000;

// üåê CORS ‚Äî Frontend autoris√©
const allowedOrigins = [
    'http://localhost:3000',
    'https://mystictattoo-chat.vercel.app',
    'https://www.mystic-tattoo.fr'
];
app.use(cors({ origin: allowedOrigins, credentials: true }));

// üîå Middleware JSON
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// üîå Connexion MongoDB
// üîå Connexion MongoDB
mongoose.connect(process.env.MONGO_URI)
    .then(() => console.log('‚úÖ Connexion MongoDB √©tablie'))
    .catch(err => console.error('‚ùå Connexion MongoDB √©chou√©e :', err));


// üìÇ Serveur de fichiers upload√©s
if (!fs.existsSync(uploadsPath)) {
    fs.mkdirSync(uploadsPath, { recursive: true });
}
app.use('/uploads', express.static(uploadsPath));

// üîÅ Routes API (automatiquement regroup√©es dans /routes/index.js)
app.use('/api', routes);

// üåç SEO ‚Äî sitemap & robots
app.use('/', sitemapRoute); // ‚ûú /sitemap.xml
app.use('/', robotsRoute);  // ‚ûú /robots.txt

// ‚öõÔ∏è Int√©gration frontend React (client/build)
if (fs.existsSync(frontendPath)) {
    app.use(express.static(frontendPath));

    // üåê Fallback React Router (toutes les routes non-API)
    app.get('*', (req, res) => {
        res.sendFile(path.join(frontendPath, 'index.html'));
    });
} else {
    console.warn('‚ö†Ô∏è Frontend non trouv√© dans /client/build');
}

// üß™ Route de test simple
app.get('/ping', (req, res) => {
    res.send('üöÄ Backend Mystic Tattoo op√©rationnel');
});

// üßØ Middleware d'erreur global
app.use((err, req, res, next) => {
    console.error('‚ùå Erreur serveur :', err);
    res.status(500).json({ error: 'Erreur serveur interne' });
});

// üöÄ Lancement du serveur
app.listen(PORT, () => {
    let showNews = 'non charg√©';
    try {
        const config = JSON.parse(fs.readFileSync(adminConfigPath, 'utf8'));
        showNews = config.showNewsOnHome ? '‚úÖ affich√©es' : '‚ùå masqu√©es';
    } catch (err) {
        console.warn('‚ö†Ô∏è admin.json introuvable ou invalide');
    }

    console.log(`‚úÖ Serveur en ligne sur http://localhost:${PORT}`);
    console.log(`üì∞ Actualit√©s d‚Äôaccueil : ${showNews}`);
});
