const express = require('express');
const cors = require('cors');
const path = require('path');
const fs = require('fs');
require('dotenv').config();

const routes = require('./routes');
const adminConfigPath = path.join(__dirname, 'config', 'admin.json');

const app = express();
const PORT = process.env.PORT || 4000;

// ‚úÖ Domaines autoris√©s pour CORS
const allowedOrigins = [
    'http://localhost:3000',
    'https://mystictattoo-chat.vercel.app',
    'https://www.mystic-tattoo.fr'
];

app.use(cors({
    origin: allowedOrigins,
    credentials: true
}));

// üì¶ Middleware JSON
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// üìÇ Fichiers upload statiques
const uploadsPath = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadsPath)) {
    fs.mkdirSync(uploadsPath, { recursive: true });
}
app.use('/uploads', express.static(uploadsPath));

// üîÅ Routes API
app.use('/api', routes);

// üì¶ Int√©gration frontend React (build dans /client/build)
const frontendPath = path.join(__dirname, 'client', 'build');
if (fs.existsSync(frontendPath)) {
    app.use(express.static(frontendPath));

    // ‚úÖ Fallback React Router : routes frontend non-API
    app.get('*', (req, res) => {
        res.sendFile(path.join(frontendPath, 'index.html'));
    });
} else {
    console.warn('‚ö†Ô∏è Aucun frontend React trouv√© dans /client/build');
}

// üß™ Route test API
app.get('/ping', (req, res) => {
    res.send('üöÄ Backend Mystic Tattoo op√©rationnel');
});

// üßØ Middleware d‚Äôerreur global
app.use((err, req, res, next) => {
    console.error('‚ùå Erreur serveur :', err);
    res.status(500).json({ error: 'Erreur serveur interne' });
});

// üöÄ Lancement serveur
app.listen(PORT, () => {
    let showNews = 'non charg√©';
    try {
        const config = JSON.parse(fs.readFileSync(adminConfigPath, 'utf8'));
        showNews = config.showNewsOnHome ? '‚úÖ affich√©es' : '‚ùå masqu√©es';
    } catch (err) {
        console.warn('‚ö†Ô∏è admin.json introuvable ou invalide');
    }

    console.log(`‚úÖ Serveur d√©marr√© : http://localhost:${PORT}`);
    console.log(`üì∞ Actualit√©s d‚Äôaccueil : ${showNews}`);
});
